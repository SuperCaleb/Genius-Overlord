import time
import logging

# Setting up logging configuration
logging.basicConfig(level=logging.DEBUG)

class OdenSystem:
    def __init__(self):
        self.oden_palace = True
        self.o_system_security = ["Protected Compromised Data."]
        self.oden_collection_of_data_value = "Data's protection"
        self.o_infinity = [self.oden_collection_of_data_value] + self.o_system_security
        self.erase_o = False

    def check_palace(self):
        if not self.oden_palace:
            logging.debug("Oden's Palace Activated")
        else:
            logging.debug("Oden's Palace is already active")

    def activate_security(self):
        if self.o_infinity and self.o_system_security:
            logging.debug("O_security Online")

    def analyze_data(self, o_information):
        o_encryption = (100.00, "data encryption completed")
        logging.debug(o_encryption)

    def process_data(self):
        for process in range(10):
            logging.debug(f"{process * 10}% Process completed...")
            time.sleep(1)

# Example usage
oden_system = OdenSystem()
oden_system.check_palace()
time.sleep(10)
oden_system.activate_security()
oden_system.analyze_data(True)
oden_system.process_data()
